BOX MODEL
===================================================================================================

O conceito chamado de "Box Model", ou como é conhecido em português, "modelo de caixas", apresenta a estrutura de um site como uma caixa, onde quase todos os elementos presentes no site são como uma caixa. As mesmas são containers que armazenam conteúdos ou até mesmo outras caixas.

O modelo de caixas também são apresentados com "aninhamento", onde uma caixa está presente dentro de outra caixa e assim sucessivamente. Abaixo está um diagrama que apresenta o modelo de caixa:

            ===============
            ||IMAGEM AQUI||
            ===============

No exemplo acima, o modelo de caixa começa com o "content" (conteúdo), que no caso é um <h1>Olá, Mundo!</h1>. Todo conteúdo possui uma "Altura" (height) e uma "Largura" (width), e com esse conjunto de propriedades, é dado o nome de "box-size" (tamanho da caixa).

---------------------------------------------------------------------------------------------------

BORDER 

Em volta do conteúdo, pode-se traçar uma linha, de diversos formatos, tamanhos e cores. Essa linha é chamada de "border" (borda). Suas principais propriedades e shorthand são: 

  - border-width --> Propriedade que define a largura dos quatro cantos da borda de um elemento.

  - border-style --> Propriedade que define o estilo dos quatro cantos da borda de um elemento.

  - border-color --> Propriedade que define a cor dos quatro cantos da borda de um elemento.

  - border: (largura) (estilo) (cor);
    Ex.: border: 10px solid steelblue;

As bordas das caixas podem ser personalizadas e decoradas, e não necessariamente precisam seguir sempre o mesmo padrão retangular. Utilizando a propriedade "border-radius", é possível arredondar os vértices. Há três possibilidades de uso dessa propriedade, e são as seguintes: 

  - border-radius: 20px; --> Nesse exemplo, todos os vértices da borda foram arredondados para o valor de 20px.

  - border-radius: 10px 15px 20px 25px; --> Nesse exemplo, cada vértice da borda foi arredondado para um valor próprio. O vértice superior esquerdo ("border-top-left-radius") foi arredondado para o valor de 10px, o vértice superior direito ("border-top-right-radius") foi arredondado para o valor de 15px, o vértice inferior direito ("border-bottom-right-radius") foi arredondado para o valor de 20px, e o vértice inferior esquerdo ("border-bottom-left-radius") foi arredondado para o valor de 25px.

  - border-radius: 10px 20px; --> Nesse exemplo, foi indicado apenas dois valores. Os vértices superior esquerdo e inferior direito receberam o valor de 10px, e os vértices superior direiro e inferior esquerdo receberam o valor de 20px. Essa declaração configura os vértices de forma intercalada.

---------------------------------------------------------------------------------------------------

PADDING

Entre o conteúdo e a borda, temos o "padding" (preenchimento), que pode ser configurado. Suas principais propriedades e shorthand são:

  - padding-top --> Propriedade que define o preenchimento superior de um elemento.

  - padding-right --> Propriedade que define o preenchimento direito de um elemento.

  - padding-bottom --> Propriedade que define o preenchimento inferior de um elemento.

  - padding-left --> Propriedade que define o preenchimento esquerdo de um elemento.

  - padding: (preenchimento superior) (preenchimento direito) (preenchimento inferior) (preenchimento esquerdo);
    Ex. 01: padding: 20px 10px 20px 10px;
    Ex. 02: padding: 10px; (nesse exemplo, todos os lados foram configurados com o mesmo valor).

---------------------------------------------------------------------------------------------------

MARGIN 

Da mesma forma que tem o espaçamento da borda para dentro, tem também o espaçamento da borda para fora, chamado de "margin" (margem). Suas principais propriedades e shorthand são:

  - margin-top --> Propriedade que define a margem superior de um elemento.

  - margin-right --> Propriedade que define a margem direita de um elemento.

  - margin-bottom --> Propriedade que define a margem inferior de um elemento.

  - margin-left --> Propriedade que define a margem esquerda de um elemento.

  - margin: (margem superior) (margem direita) (margem inferior) (margem esquerda);
    Ex. 01: margin: 10px 20px 10px 50px;
    Ex. 02: margin: 20px; (nesse exemplo, todos os lados foram configurados com o mesmo valor).
    Ex. 03: margin: 10px auto 10px auto; (nesse exemplo, as margens direita e esquerda foram configuradas como automáticas, fazendo com que o elemento fique centralizado).

---------------------------------------------------------------------------------------------------

OUTLINE

Entre a margem e a borda, também é possível determinar o "outline" (contorno), que é um traçado visual que é criado fora da borda, e o calculo de sua espessura faz parte da margem. Enquanto a borda é feita dentro do elemento, o contorno é feito fora do elemento. Suas principais propriedades e shorthand são:

  - outline-width --> Propriedade que define a largura do contorno.

  - outline-style --> Propriedade que define o estilo do contorno.

  - outline-color --> Propriedade que define a cor do contorno.

  - outline: (largura) (estilo) (cor);
    Ex.: outline: 5px dashed slateblue;

---------------------------------------------------------------------------------------------------

TIPOS DE CAIXA

Podemos classficar os elementos em duas categorias de caixa, dependendo do seu comportamento, podendo ser "block-level" ou "inline-level".

    CAIXA BLOCK-LEVEL 
    Um elemento "block-level" sempre se inicia em uma nova linha e ocupa a largura total do elemento em que o mesmo está contido, ou toda a largura do <body>. Seu "display" é o "block". A seguir, uma lista de alguns elementos HTML que são classificados como block-level: 

           <div>   | <h1> - <h6> |     <p>      |    <main>    | <header>
           <nav>   |  <article>  |   <aside>    |   <footer>   | <form>
         <video>   |  <adress>   | <blockquote> |   <canvas>   | <dd>
           <dl>    |    <dt>     |  <fieldset>  | <figcaption> | <figure>
           <hr>    |    <li>     |  <noscript>  |     <ol>     | <pre>
         <section> |   <table>   |   <tfoot>    |     <ul>

    CAIXA INLINE-LEVEL
    Ao contrário do block-level, um elemento "inline-level" não começa em uma nova linha, e sim no exato ponto onde foram definidos, e a largura ocupa apenas a área do tamanho relativo ao seu conteúdo. Seu "display" é o "inline". A seguir, uma lista de alguns elementos HTML que são classificados como inline-level: 

         <span>  |      <a>      |   <code>   | <small>  | <strong> 
          <em>   | <sup> - <sub> |  <label>   | <button> | <input>
        <select> |    <abbr>     | <acronym>  |   <b>    | <bdo>
          <br>   |    <cite>     |   <dfn>    |   <i>    | <img>
         <kbd>   |     <map>     | <object>   | <output> | <q>
         <samp>  |   <script>    | <textarea> |   <tt>   | <var>

---------------------------------------------------------------------------------------------------

GROUPING TAGS

Em versões mais antigas do HTML, tinham apenas duas "tags de agrupamento", ou "grouping tags", sendo elas a <div>, que é do tipo block-level, e a <span>, que é do tipo inline-level. Essas tags de agrupamento têm como objetivo juntar vários outros elementos HTML.

Com o HTML5, surgiram as "tags semânticas", ou "semantic tags", que também são tags de agrupamento, mas elas contribuem bastante na divisão e na organização da estrutura do código. Abaixo está uma lista das principais tags semânticas:

  - Header --> A tag <header> pode ser utilizada como cabeçalho principal de um site ou como cabeçalho de algum artigo ou de alguma seção. Normalmente possui títulos, subtítulos e menus de navegação.

  - Nav --> A tag <nav> pode definir uma área que possui links de navegação, e geralmente se encontra dentro da tag Header.

  - Main --> A tag <main> é utilizado para conter o conteúdo principal de um site, e normalmente apresenta as seções e os artigos do mesmo.

  - Section --> A tag <Section> é utilizada para criar seções para a página. Uma seção pode ser dividida em artigos com conteúdos específicos. Segundo a W3C, "uma seção é um agrupamento temático de conteúdos, tipicamente com um cabeçalho".

  - Article --> A tag <article> é utilizada para conter um conteúdo que pode ser lido de forma independente e dizem respeito a um mesmo assunto. A tag pode ser utilizada para conter um post de um blog ou de um fórum e uma notícia.

  - Aside --> A tag <aside> contém um conteúdo periférico e complementar ao conteúdo principal, do artigo ou da seção do site. Normalmente, o conteúdo da tag Aside fica localizada ao lado de um determinado texto, ou até mesmo no meio dele.

  - Footer --> A tag <footer> é utilizada para criar um rodapé, geralmente para o site inteiro, mas também pode ser utilizada para criar um rodapé para uma seção ou artigo. Normalmente, em um rodapé é apresentado informações sobre a autoria do conteúdo o do site, links adicionais, mapa do site e outros documentos relacionados.

---------------------------------------------------------------------------------------------------

SOMBRA NAS CAIXAS 

Um recurso muito interessante, e também muito útil, são as sombras que podem ser criadas para uma caixa, pois dão um destaque no conteúdo, além de deixar mais visualmente agradável. Importante ter em mente que as sombras não precisam ser exageradas.

A propriedade "box-shadow" é utilizada para a criação de sombras. Nela é indicado, primeiramente, o "deslocamento horizontal" ("h-offset"), que é o quanto a sombra se deslocará para o lado direito, valores negativos a farão se deslocar para o lado esquerdo. Depois é indicado o "deslocamento vertical" ("v-offset"), que é o quanto a sobra se deslocará para baixo, valores negativos a farão se deslocar para cima. Após indicar o deslocamento vertical, é indicado o "embaçamento" ("blur"), que é o quanto a sombra será espalhada pelo fundo. Por último indicamos a cor da sombra. O mais recomendado é que a cor indicada seja a preta, e que tenha um nível de transparência considerável.

Utilizando a seguinte propriedade como exemplo, pode-se entender como funciona a sombra nas CSS:

  main {
    box-shadow: box-shadow: 6px 7px 8px black;
  }

No exemplo acima, está sendo criado uma sombra para a tag <main>, onde a mesma terá um deslocamento de 6px para a direita, um deslocamento de 7px para baixo, uma espalhamento de 8px e uma cor preta. Para fazer uma sombra interna, basta acrescentar "inset" no início do código, antes do deslocamento horizontal.